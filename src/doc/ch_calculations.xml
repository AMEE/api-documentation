<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" 
  "http://www.docbook.org/xml/5.0/dtd/docbook.dtd"
[
<!ENTITY % translations   SYSTEM "translations.ent">
%translations;
]>

<chapter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id='calculations'>
  <title>Perform Calculations</title>
  <section xml:id='doing-calculations'>
    <title>Doing a Calculation</title>
    <para>
      Once you've selected a &category; and &data_item;, you can get &api_name; to perform calculations for you. <xref linkend='data'/> explains how to make
	  your choice, so have a quick read of that first, if you haven't already.
    </para>
	<para>
      Once you know the &category; name and &data_item; you want, you simply send a GET 
	  request to the &category;'s calculation URL. You should provide the following query parameters:
	</para>
	<itemizedlist>
		<listitem>The relevant &drill_options;</listitem>
		<listitem>Some &profile_item_values;, with the form <code>value.{&profile_item_value;_name}={your_value}</code></listitem>
	</itemizedlist>
	<para>
      You can find out all this information, including which <glossterm>&profile_item_values;</glossterm> are required or optional, 
	  using the &developer_tab; in &discover;.
	</para>
	<xi:include href='samples/get_3_categories_DEFRA_transport_fuel_methodology_calculation_values.volume=500_fuel=petrol.xml' />
    <para>
	  In this example, we are calculating the emissions for some petrol use. The only required &profile_item_value; is
	  <code>values.volume</code> parameter, which represents a volume of fuel used. We're sending a value of 500, so a calculation will
	  be performed for 500 litres of fuel. &profile_item_value; units are normally SI (or derived), but you can provide &profile_item_values; in other units; 
	  see <xref linkend='units' /> for details.
    </para>
    <para>
      You can perform thousands of different calculations by using different the &categories; and
      &data_items;. As each &category; represents a different methodology, the &profile_item_values;
      are different for each one. &discover; lists which are valid for which &models;, as well
      as showing different usage options; which ones are required, optional, and so on.
    </para>
    <para>
	  By using &profiles;, you can also store these &profile_item_values;, or track how they change over time. 
      We will go into this option in the following chapter.
    </para>
  </section>
  <section xml:id='getting-results'>
    <title>Getting Results</title>
	    <para>
	      The <code>amounts</code> collection in the response shows separately the amounts of greenhouse gases emitted, by name, 
		  often together with an equivalent amount of CO2 that would have the same climate impact, and other outputs of interest. 
		  The exact set of outputs varies from &category; to &category;, as documented in &discover;. In this case we see that 1151kg of 
	      CO2, plus some other gases, produce the 1156kg of climate-equivalent CO2, or CO2e.
	    </para>
	    <para>
	      Any notes or errors returned by the calculation will also be included in the response. These provide context or explanation of what
		  the calculation is doing, or what went wrong.
	    </para>
  </section>
</chapter>

<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" 
  "http://www.docbook.org/xml/5.0/dtd/docbook.dtd"
[
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % dbcent PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/opt/local/share/xml/docbook/4.5/dbcentx.mod">
%dbcent;
]>

<section xmlns:xi="http://www.w3.org/2001/XInclude">
	<title>Profile Items</title>
  <para>
    Profile items represent individual instances of energy use or consumption. A client application
    will create a profile item for each item of energy use; the resulting object contains the emissions
    associated with that item of energy use.
  </para>
  <para>
    Profile items are contained inside Profile Categories, which in are contained inside Profiles. Profile
    items in turn contains Profile Item Values, which represent the individual values that go into the 
    calculation.
  </para>    
	<section>
		<title>Properties</title>
		<table>
			<tr>
				<th>Property</th>
				<th>Description</th>
			</tr>
			<tr>					
				<td>UID</td>
				<td>A 12-letter unique identifier for the profile item. See <xref linkend='uids'/> for more information.</td>
			</tr>
			<tr>					
				<td>created</td>
				<td>The time and date on which the profile item was created.</td>
			</tr>
			<tr>					
				<td>modified</td>
				<td>The time and date on which the profile item was last modified.</td>
			</tr>
			<tr>					
				<td>name</td>
				<td>The name of the profile item. Profile items with the same name and Data Item are considered to be a time series.</td>
			</tr>
			<tr>					
				<td>startDate</td>
				<td>The date/time from which the profile item is valid. See discussion of time series for more detail.</td>
			</tr>
			<tr>					
				<td>endDate</td>
				<td>The date/time until which the profile item is valid. See discussion of time series for more detail.</td>
			</tr>
			<tr>					
				<td>Data Item</td>
				<td>The data item which this profile item uses to obtain emission factors.</td>
			</tr>
		</table>
	</section>
	<section xml:id='create_profile_item_reference'>
		<title>Create Profile Item</title>
		<para>
			Used to create a new profile item.
		</para>
		<table class='requestdetails'>
			<tr>					
				<td>URL</td>
				<td>https://{server}.amee.com/profiles/{profile_uid}/{category_path}</td>
			</tr>
			<tr>					
				<td>HTTP Method</td>
				<td>POST</td>
			</tr>
			<tr>					
				<td>Request Content-Type</td>
				<td>application/x-www-form-urlencoded</td>
			</tr>
			<tr>
				<td>Response Content-Type</td>
				<td>application/json or application/xml</td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td>201 CREATED</td>
			</tr>
		</table>
		<section>
		  <title>Compulsory Parameters</title>
  		<table class='parameters'>
  			<tr>
					<th>Parameter</th>
					<th>Description</th>
  			</tr>
				<tr>					
					<td>dataItemUid</td>
					<td>The UID of the Data Item which a new Profile Item should be based upon. This should be obtained from a drilldown request as described in <xref linkend='drilldown_reference' />.</td>
				</tr>
  		</table>
	  </section>
		<section>
		  <title>Optional Parameters</title>
  		<table class='parameters'>
  			<tr>
					<th>Parameter</th>
					<th>Description</th>
  			</tr>
				<tr>
					<td>{valueName}</td>
					<td>Set a Profile Item Value by specifying the name and value. For example, the value 
					  name could be 'distance' supplied with a value of '300'. Multiple name/value pairs
					  can be submitted so long as the named Item Values exist for the Profile Item. Names
					  and values are case sensitive.</td>
				</tr>
				<tr>					
					<td>{valueName}Unit</td>
					<td>If a value is set, a unit can also be set. In the distance example above, the 
					  'distanceUnit' parameter could be set to 'km', 'mi', or any other supported distance 
					  unit. All values have default units if none are supplied.</td>
				</tr>
				<tr>					
					<td>{valueName}PerUnit</td>
					<td>If a value is set, a perUnit can also be set, which indicates the timescale over which
					  the value applies. In the distance example above, the 'distancePerUnit' parameter could be
					  set to 'day', 'month', or any other supported time unit. Not all values support perUnits; check AMEE
					  explorer for each case. Relevant values have default perUnits if none are supplied.</td>
				</tr>
				<tr>					
					<td>name</td>
					<td>Set the name of the item. You cannot create two items with the same dataItemUid and 
					  overlapping dates unless you give them a unique name. Items with the same name and dataItemUid
					  are considered to be a time series.</td>
				</tr>
				<tr>					
					<td>startDate</td>
					<td>An ISO8601 date/time which specifies when the item should be valid from. This parameter is
					  compulsory if either endDate or duration are specified. Defaults to the current time.</td>
				</tr>
				<tr>					
					<td>endDate</td>
					<td>An ISO8601 date/time which specifies when the item should be valid until. Defaults to
					  infinitely far in the future.</td>
				</tr>
				<tr>					
					<td>duration</td>
					<td>As an alternative to specifying an end time, you can specify the duration that the item 
					  should be valid for in ISO8601 duration format.</td>
				</tr>
				<tr>					
					<td>representation</td>
					<td>If set to 'full', the newly-created item will be returned in the response to the POST request.
					  By default, only a Location header is returned.</td>
				</tr>
  		</table>
	  </section>
		<para>
		  If the representation parameter is set to full, the response will include the details of the created item. 
		  Otherwise, a Location header is returned which indicates the URL of the new item.
		</para>
		<section role='tabbed'>
		  <section role='tab'>
  			<title>Example</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
POST /profiles/4737069901D3/home/energy/quantity HTTP/1.1
Accept: application/json, application/xml
Content-Type: application/x-www-form-urlencoded
          </programlisting>
          <programlisting role='body'>
dataItemUid=66056991EE23&amp;energyConsumption=10&amp;energyConsumptionUnit=kWh&amp;
energyConsumptionPerUnit=month&amp;startDate=2009-03-19T16%3A51%3A00%2B00%3A00
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 201 CREATED
Location: https://{server}.amee.com/profiles/4737069901D3/home/energy/quantity/F7C0580D088A
Content-Type: text/plain
          </programlisting>
			  </section>
  		</section>
		  <section role='tab'>
  			<title>JSON</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
POST /profiles/4737069901D3/home/energy/quantity HTTP/1.1
Accept: application/json
Content-Type: application/x-www-form-urlencoded
          </programlisting>
          <programlisting role='body'>
dataItemUid=66056991EE23&amp;energyConsumption=10&amp;energyConsumptionUnit=kWh&amp;
energyConsumptionPerUnit=month&amp;startDate=2009-03-19T16%3A51%3A00%2B00%3A00&amp;
representation=full
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 201 CREATED
Content-Type: application/json; charset=UTF-8
          </programlisting>
  			  <programlisting role='json-body'><xi:include href='samples/json/create_profile_item.js' parse="text"/></programlisting>
			  </section>
  		</section>
  		<section role='tab'>
  			<title>XML</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
POST /profiles/4737069901D3/home/energy/quantity HTTP/1.1
Accept: application/xml
Content-Type: application/x-www-form-urlencoded
          </programlisting>
          <programlisting role='body'>
dataItemUid=66056991EE23&amp;energyConsumption=10&amp;energyConsumptionUnit=kWh&amp;
energyConsumptionPerUnit=month&amp;startDate=2009-03-19T16%3A51%3A00%2B00%3A00&amp;
representation=full
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 201 CREATED
Content-Type: application/xml; charset=UTF-8
          </programlisting>
          <programlisting role='xml-body'><xi:include href='samples/xml/create_profile_item.xml' parse="text"/></programlisting>
        </section>
  		</section>
  	</section>
	</section>
	<section>
		<title>Read Profile Item</title>
		<para>
			Used to fetch a representation of an existing profile item.
		</para>
		<table class='requestdetails'>
			<tr>					
				<td>URL</td>
				<td>https://{server}.amee.com/profiles/{profile_uid}/{category_path}/{profile_item_uid}</td>
			</tr>
			<tr>					
				<td>HTTP Method</td>
				<td>GET</td>
			</tr>
			<tr>
				<td>Response Content-Type</td>
				<td>application/json or application/xml</td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td>200 OK</td>
			</tr>
		</table>
		<para>
		  The response includes a representation of the requested profile item.
		</para>
		<section role='tabbed'>
		  <section role='tab'>
  			<title>JSON</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
GET /profiles/F38ECBD56D59/home/energy/quantity/5891C88F29FA HTTP/1.1
Accept: application/json
Content-Type: application/x-www-form-urlencoded
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
          </programlisting>
  			  <programlisting role='json-body'><xi:include href='samples/json/get_profile_item.js' parse="text"/></programlisting>
			  </section>
  		</section>
  		<section role='tab'>
  			<title>XML</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
GET /profiles/4737069901D3/home/energy/quantity/F7C0580D088A HTTP/1.1
Accept: application/xml
Content-Type: application/x-www-form-urlencoded
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
          </programlisting>
          <programlisting role='xml-body'><xi:include href='samples/xml/get_profile_item.xml' parse="text"/></programlisting>
        </section>
  		</section>
  	</section>
	</section>
	<section>
		<title>List Profile Items</title>
		<para>
			Fetches all profile items in a particular category.
		</para>
		<table class='requestdetails'>
			<tr>					
				<td>URL</td>
				<td>https://{server}.amee.com/profiles/{profile_uid}/{category_path}</td>
			</tr>
			<tr>					
				<td>HTTP Method</td>
				<td>GET</td>
			</tr>
			<tr>
				<td>Response Content-Type</td>
				<td>application/json or application/xml</td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td>200 OK</td>
			</tr>
		</table>
		<section>
		  <title>Optional Parameters</title>
  		<table class='parameters'>
  			<tr>
					<th>Parameter</th>
					<th>Description</th>
  			</tr>
				<tr>
					<td>startDate</td>
					<td>Start and end dates can be used to define a "query window" for the request. This 
					  window affects which profile items will be returned in the response, and included 
					  in the total emission value. See parameters below for details. The date should be
					  specified in ISO8601 format. Default value is the start of the current month. If
					  endDate or duration are specified, this parameter is compulsory.</td>
				</tr>
				<tr>					
					<td>endDate</td>
					<td>See startDate above. Should be specified in ISO8601 format. Defaults to
					  infinitely far in the future.</td>
				</tr>
				<tr>					
					<td>duration</td>
					<td>As an alternative to specifying an end time, you can specify the duration of the query
					  window in ISO8601 duration format.</td>
				</tr>
				<tr>					
					<td>mode</td>
					<td>Set the calculation mode used. By default, emission values for items are for the
					  whole item, not just the part of the item that intersects the query window. To
					  get just the emissions that took place during the query window, set this parameter
					  to 'prorata'.</td>
				</tr>
				<tr>					
					<td>returnUnit</td>
					<td>Mass units that should be used for the calculation results. Specifying returnUnit=lb would
					  return lb/year instead of kg/year, for example. See the list of supported units for
					  more details. Default unit is kg.</td>
				</tr>
				<tr>					
					<td>returnPerUnit</td>
					<td>Time units that should be used for the calculation results. Specifying returnPerUnit=month would
					  return kg/month instead of kg/year, for example. See the list of supported units for
					  more details. Default is per year.</td>
				</tr>
				<tr>					
					<td>page</td>
					<td>If there is more than one page of profile items, retrieve the specified page. Default is 
					  to fetch page 1. See <xref linkend='paging'/>.</td>
				</tr>
				<tr>
					<td>itemsPerPage</td>
					<td>Specify the number of profile items returned in a single page. Default is 
					  to fetch 10 items per page. See <xref linkend='paging'/>.</td>
				</tr>
  		</table>
	  </section>
		<para>
		  The response describes the profile category and any items within it.
		</para>
		<section role='tabbed'>
		  <section role='tab'>
  			<title>JSON</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
GET /profiles/F554D93A62AB/home/energy/quantity HTTP/1.1
Accept: application/json
Content-Type: application/x-www-form-urlencoded
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
          </programlisting>
  			  <programlisting role='json-body'><xi:include href='samples/json/get_profile_category.js' parse="text"/></programlisting>
			  </section>
  		</section>
  		<section role='tab'>
  			<title>XML</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
GET /profiles/E3C664F77FB4/home/energy/quantity HTTP/1.1
Accept: application/xml
Content-Type: application/x-www-form-urlencoded
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
          </programlisting>
          <programlisting role='xml-body'><xi:include href='samples/xml/get_profile_category.xml' parse="text"/></programlisting>
        </section>
  		</section>
  	</section>
	</section>
  <section xml:id='update_profile_item_reference'>
		<title>Update Profile Item</title>
		<para>
			Used to update an existing profile item.
		</para>
		<table class='requestdetails'>
			<tr>					
				<td>URL</td>
				<td>https://{server}.amee.com/profiles/{profile_uid}/{category_path}/{profile_item_uid}</td>
			</tr>
			<tr>					
				<td>HTTP Method</td>
				<td>PUT</td>
			</tr>
			<tr>					
				<td>Request Content-Type</td>
				<td>application/x-www-form-urlencoded</td>
			</tr>
			<tr>
				<td>Response Content-Type</td>
				<td>application/json or application/xml</td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td>200 OK</td>
			</tr>
		</table>
		<section>
		  <title>Optional Parameters</title>
  		<table class='parameters'>
  			<tr>
					<th>Parameter</th>
					<th>Description</th>
  			</tr>
				<tr>
					<td>{valueName}</td>
					<td>Set a Profile Item Value by specifying the name and value. For example, the value 
					  name could be 'distance' supplied with a value of '300'. Multiple name/value pairs
					  can be submitted so long as the named Item Values exist for the Profile Item. Names
					  and values are case sensitive.</td>
				</tr>
				<tr>					
					<td>{valueName}Unit</td>
					<td>If a value is set, a unit can also be set. In the distance example above, the 
					  'distanceUnit' parameter could be set to 'km', 'mi', or any other supported distance 
					  unit. All values have default units if none are supplied.</td>
				</tr>
				<tr>					
					<td>{valueName}PerUnit</td>
					<td>If a value is set, a perUnit can also be set, which indicates the timescale over which
					  the value applies. In the distance example above, the 'distancePerUnit' parameter could be
					  set to 'day', 'month', or any other supported time unit. Not all values support perUnits; check AMEE
					  explorer for each case. Relevant values have default perUnits if none are supplied.</td>
				</tr>
				<tr>					
					<td>name</td>
					<td>Set the name of the item. You cannot create two items with the same dataItemUid and 
					  overlapping dates unless you give them a unique name. Items with the same name and dataItemUid
					  are considered to be a time series.</td>
				</tr>
				<tr>					
					<td>startDate</td>
					<td>An ISO8601 date/time which specifies when the item should be valid from. This parameter is
					  compulsory if either endDate or duration are specified. Defaults to the current time.</td>
				</tr>
				<tr>					
					<td>endDate</td>
					<td>An ISO8601 date/time which specifies when the item should be valid until. Defaults to
					  infinitely far in the future.</td>
				</tr>
				<tr>					
					<td>duration</td>
					<td>As an alternative to specifying an end time, you can specify the duration that the item 
					  should be valid for in ISO8601 duration format.</td>
				</tr>
				<tr>					
					<td>representation</td>
					<td>If set to 'full', the newly-created item will be returned in the response to the POST request.
					  By default, only a Location header is returned.</td>
				</tr>
  		</table>
	  </section>
		<para>
		  If the representation parameter is set to full, the response will include the details of the created item. 
		  Otherwise, it will be empty.
		</para>
		<section role='tabbed'>
		  <section role='tab'>
  			<title>Example</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
PUT /profiles/4A546C3F1B2E/transport/motorcycle/generic/9B32A9FC3B08 HTTP/1.1
Accept: application/json, application/xml
Content-Type: application/x-www-form-urlencoded
          </programlisting>
          <programlisting role='body'>
distance=200&amp;distanceUnit=km&amp;distancePerUnit=month
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: text/plain
          </programlisting>
			  </section>
  		</section>
		  <section role='tab'>
  			<title>JSON</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
PUT /profiles/155DD3C63646/transport/motorcycle/generic/D47C465B8157 HTTP/1.1
Accept: application/json
Content-Type: application/x-www-form-urlencoded
          </programlisting>
          <programlisting role='body'>
distance=200&amp;distanceUnit=km&amp;distancePerUnit=month&amp;representation=full
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
          </programlisting>
  			  <programlisting role='json-body'><xi:include href='samples/json/update_profile_item.js' parse="text"/></programlisting>
			  </section>
  		</section>
  		<section role='tab'>
  			<title>XML</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
PUT /profiles/03FC2D6A50C9/transport/motorcycle/generic/30A4140A2755 HTTP/1.1
Accept: application/xml
Content-Type: application/x-www-form-urlencoded
          </programlisting>
          <programlisting role='body'>
distance=200&amp;distanceUnit=km&amp;distancePerUnit=month&amp;representation=full
          </programlisting>
        </section>
        <section role='httpresponse'>
          <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
          </programlisting>
          <programlisting role='xml-body'><xi:include href='samples/xml/update_profile_item.xml' parse="text"/></programlisting>
        </section>
  		</section>
  	</section>
	</section>
	<section>
		<title>Delete Profile Item</title>
		<para>
			Completely remove the specified profile item from the AMEE database. This information cannot be recovered after deletion.
		</para>			
		<table class='requestdetails'>
			<tr><td>URL</td><td>https://{server}.amee.com/profiles/{profile_uid}/{category_path}/{profile_item_uid}</td></tr>
			<tr><td>HTTP Method</td><td>DELETE</td></tr>
			<tr><td>Successful Response Code</td><td>200 OK</td></tr>
		</table>
		<section role='tabbed'>
		  <section role='tab'>
    		<title>Example</title>
  			<section role='httprequest'>
  			  <programlisting role='header'>
DELETE /profiles/228A21573085/home/energy/quantity/B56410A978B6 HTTP/1.1
Accept: application/json, application/xml
          </programlisting>
  			</section>
  			<section role='httpresponse'>
  			  <programlisting role='header'>
HTTP/1.1 200 OK
Content-Type: text/plain
          </programlisting>
  			</section>
  		</section>
		</section>
	</section>
</section>
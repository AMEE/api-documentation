<?xml version="1.0"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" 
  "http://www.docbook.org/xml/5.0/dtd/docbook.dtd"
[
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % dbcent PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "../../tools/dtd/dbcentx.mod">
%dbcent;
<!ENTITY % translations   SYSTEM "translations.ent">
%translations;
]>

<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="profile-reference">
	<title><phrase role='titleize'>&profiles;</phrase></title>
	<para>
    A &profile; is the basic grouping element in &api_name;. A single &profile; is used to contain all data corresponding to a single entity 
    in a client application. This could be a person, a building, an organisation, etc.; 
    you are free to choose what a &profile; corresponds to in your application. You can create any number of separate 
    &profiles;.
  </para>
	<para>
    A &profile; is identified by its UID, which forms part of the URL for any operations that are performed on or inside the &profile;.
  </para>
	<section>
		<title>Properties</title>
		<table class="properties">
			<tr>
				<th>Property</th>
				<th>Description</th>
				<th><link linkend='matrix-parameters'>Matrix Parameter</link></th>
			</tr>
			<tr>
				<td>UID</td>
				<td>A 12-letter unique identifier for the &profile;. See <xref linkend="uid-reference"/> for more information.</td>
				<td></td>
			</tr>
			<tr>
				<td>categories</td>
				<td>The &models; that have been used within this &profile;.</td>
				<td><code>categories</code></td>
			</tr>
			<tr>
				<td>created</td>
				<td>The time and date on which the &profile; was created.</td>
				<td><code>audit</code></td>
			</tr>
			<tr>
				<td>modified</td>
				<td>The time and date on which the &profile; was last modified. Note that this
				   does not track changes inside the &profile;, such as to &profile_item_values;, 
				   only to the &profile; resource itself.</td>
				<td><code>audit</code></td>
			</tr>
		</table>
	</section>
	<section id="create-profile-reference">
		<title>Create &profile;</title>
		<para>
			Used to create a new &profile;, in which &profile_item_values; can be stored.
		</para>
		<table class="requestdetails">
			<tr>
				<td>URL</td>
				<td><code>&api_url;/&api_version;/profiles</code></td>
			</tr>
			<tr>
				<td>HTTP Method</td>
				<td><code>POST</code></td>
			</tr>
			<tr>
				<td>Request Content-Type</td>
				<td><code>application/x-www-form-urlencoded</code></td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td><code>201 CREATED</code></td>
			</tr>
		</table>
		<section>
			<title>Body Parameters</title>
			<table class="parameters">
				<tr>
					<th>Parameter</th>
					<th>Description</th>
					<th>Required?</th>
				</tr>
				<tr>
					<td><code>profile</code></td>
					<td>Tell &api_name; to create a &profile;. Should always be 'true'.</td>
					<td>&required;</td>
				</tr>
			</table>
		</section>
		<para>
		  The response body contains the created profile UID, as does the <code>Location</code> header.
		</para>
		<xi:include href="samples/post_3_profiles_profile=true.xml"/>
	</section>
	<section xml:id="get-profile-item-reference">
		<title>Get &profile;</title>
		<para>
			The main information available in the &profile; resource is the list of &categories; used. 
			This is useful for automating display of stored data.
		</para>
		<table class="requestdetails">
			<tr>
				<td>URL</td>
				<td><code>&api_url;/&api_version;/profiles/{profile_uid}</code></td>
			</tr>
			<tr>
				<td>HTTP Method</td>
				<td><code>GET</code></td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td><code>200 OK</code></td>
			</tr>
		</table>
		<xi:include href="samples/get_3_profiles_UID;categories.xml"/>
	</section>
	<section xml:id="list-profiles-reference">
		<title>List &profiles;</title>
		<para>
			Lists all &profiles; available to the current user.
		</para>
		<table class="requestdetails">
			<tr>
				<td>URL</td>
				<td><code>&api_url;/&api_version;/profiles</code></td>
			</tr>
			<tr>
				<td>HTTP Method</td>
				<td><code>GET</code></td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td><code>200 OK</code></td>
			</tr>
		</table>
		<xi:include href="samples/get_3_profiles.xml"/>
	</section>
	<section xml:id="delete-profile-item-reference">
		<title>Delete &profile;</title>
		<para>
			Completely remove the specified &profile; from the AMEE database, including all &profile_items;
			contained within it. This information cannot be recovered after deletion.
		</para>
		<table class="requestdetails">
			<tr>
				<td>URL</td>
				<td><code>&api_url;/&api_version;/profiles/{profile_uid}</code></td>
			</tr>
			<tr>
				<td>HTTP Method</td>
				<td><code>DELETE</code></td>
			</tr>
			<tr>
				<td>Successful Response Code</td>
				<td><code>200 OK</code></td>
			</tr>
		</table>
		<xi:include href="samples/delete_3_profiles_UID.xml"/>
	</section>
</section>

<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" 
  "http://www.docbook.org/xml/5.0/dtd/docbook.dtd">
<appendix id="amee.reference" xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>API Reference</title>

  <section>
  	<title>Profiles</title>
    <para>
	  A Profile is the basic grouping element in AMEE. A single profile is used to contain all data corresponding to a single entity 
	  in a client application. This could be a person, a building, an organisation, etc.; 
	  you are free to choose what a profile corresponds to in your application. You can create any number of separate 
	  Profiles.
	</para>
	<para>
	  Each Profile has a unique identifier or UID such as '6B0DD95CDF3D'.
	</para>
	<para>
	  See also: [wiki:AmeeConcepts AMEE Concepts], [wiki:AmeeProfileApi AMEE Profile API], [wiki:ProfileHistory Profile History]
	</para>
	<section>
		<title>Properties</title>
		<para>
		  There  are no distinct properties for a Profile. See also: [wiki:CommonProperties Common Properties]
		</para>
	</section>
	<section>
		<title>API Operations</title>
		<section>
			<title>Create Profile</title>
			<para>
				Used to create a new profile, in which ProfileItems can be stored.
			</para>			
			<itemizedlist>
				<listitem>URL: <code>http://{server}/profiles</code></listitem>
				<listitem>Method: <code>POST</code></listitem>
				<listitem>Request format:  <code>application/x-www-form-urlencoded</code></listitem>
				<listitem>Response format: <code>application/xml, application/json</code></listitem>
				<listitem>Response code: <code>200 OK</code></listitem>
				<listitem>Response body: A description of the new profile.</listitem>
			</itemizedlist>			
			<para>
				||'''API Version'''||'''Parameter'''||'''Definition'''||'''Required'''||
				||all||profile||Create a new profile. Value should always be set to 'true'.||Yes||
			</para>
			<section>
				<title>JSON</title>
				<para>Request</para>
				<programlisting>
POST /profiles HTTP/1.1
Accept: application/json
Content-Type: application/x-www-form-urlencoded
				</programlisting>
				<programlisting>
profile=true
				</programlisting>
				<para>Response</para>
				<programlisting>
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
				</programlisting>
				<programlisting language="javascript"><xi:include href='samples/json/post_profiles.js' parse="text"/></programlisting>
			</section>
			<section>
				<title>XML</title>
				<para>Request</para>
				<programlisting>
POST /profiles HTTP/1.1
Accept: application/xml
Content-Type: application/x-www-form-urlencoded
				</programlisting>
				<programlisting>
profile=true
				</programlisting>
				<para>Response</para>
				<programlisting>
HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
				</programlisting>
				<programlisting language="xml"><xi:include href='samples/xml/post_profiles.xml' parse="text"/></programlisting>
			</section>
		</section>
		<section>
			<title>List Profiles</title>
			<para>
				Lists all profiles available to the current user. Currently this is the list of all profiles
				created by the current user, but may in future depend on other permissions.
			</para>			
			<itemizedlist>
				<listitem>URL: <code>http://{server}/profiles</code></listitem>
				<listitem>Method: <code>GET</code></listitem>
				<listitem>Response format: <code>application/xml, application/json</code></listitem>
				<listitem>Response code: <code>200 OK</code></listitem>
				<listitem>Response body: A list of Profiles for the current [wiki:User User]</listitem>
			</itemizedlist>			
			<section>
				<title>JSON</title>
				<para>Request</para>
				<programlisting>
GET /profiles HTTP/1.1
Accept: application/json
				</programlisting>
				<para>Response</para>
				<programlisting>
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
				</programlisting>
				<programlisting language="javascript"><xi:include href='samples/json/get_profiles.js' parse="text"/></programlisting>
			</section>
			<section>
				<title>XML</title>
				<para>Request</para>
				<programlisting>
GET /profiles HTTP/1.1
Accept: application/xml
				</programlisting>
				<para>Response</para>
				<programlisting>
HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
				</programlisting>
				<programlisting language="xml"><xi:include href='samples/xml/get_profiles.xml' parse="text"/></programlisting>
			</section>
		</section>
		<section>
			<title>Delete Profile</title>
			<para>
				Completely remove a specified profile from the AMEE database, including all Profile Items contained within in.
			</para>			
			<itemizedlist>
				<listitem>URL: <code>http://{server}/profiles/{profile_uid}</code></listitem>
				<listitem>Method: <code>DELETE</code></listitem>
				<listitem>Response code: <code>200 OK</code></listitem>
				<listitem>Response body: None</listitem>
			</itemizedlist>			
			<section>
				<title>Example</title>
				<para>Request</para>
				<programlisting>
DELETE /profiles/358E3BCF690E HTTP/1.1
				</programlisting>
				<para>Response</para>
				<programlisting>
HTTP/1.1 200 OK
				</programlisting>
			</section>
		</section>
	</section>
  </section>
</appendix>
